<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Lamps and bridges

//Player
player = instance_position(512, 736, objPlayer);

c1 = instance_position(640, 128, objConnectLamp);
c2 = instance_position(768, 96, objConnectLamp);
c3 = instance_position(704, 160, objConnectLamp);
c4 = instance_position(736, 224, objConnectLamp);
c5 = instance_position(704, 288, objConnectLamp);
c6 = instance_position(704, 224, objConnectLamp);
c7 = instance_position(768, 224, objConnectLamp);
c8 = instance_position(768, 288, objConnectLamp);
c9 = instance_position(544, 384, objConnectLamp);
c10 = instance_position(544, 544, objConnectLamp);
c11 = instance_position(480, 384, objConnectLamp);
c12 = instance_position(384, 128, objConnectLamp);
c13 = instance_position(256, 96, objConnectLamp);
c14 = instance_position(320, 160, objConnectLamp);
c15 = instance_position(384, 320, objConnectLamp);
c16 = instance_position(192, 320, objConnectLamp);
c17 = instance_position(288, 224, objConnectLamp);
c18 = instance_position(224, 192, objConnectLamp);
c19 = instance_position(352, 192, objConnectLamp);
c20 = instance_position(544, 32, objConnectLamp);
c21 = instance_position(480, 32, objConnectLamp);

br1a = instance_position(672, 96, objBridge);
br1b = instance_position(672, 128, objBridge);
br1c = instance_position(704, 128, objBridge);
br2 = instance_position(736, 96, objBridge);
br3 = instance_position(736, 160, objBridge);
br4a = instance_position(672, 256, objBridge);
br4b = instance_position(736, 256, objBridge);
br4c = instance_position(768, 256, objBridge);
br5a = instance_position(672, 288, objBridge);
br5b = instance_position(704, 320, objBridge);
br6a = instance_position(672, 224, objBridge);
br6b = instance_position(704, 192, objBridge);
br7a = instance_position(768, 192, objBridge);
br7b = instance_position(800, 224, objBridge);
br8a = instance_position(768, 320, objBridge);
br8b = instance_position(800, 288, objBridge);
br9 = instance_position(544, 416, objBridge);
br10 = instance_position(512, 544, objBridge);
br11 = instance_position(480, 416, objBridge);
br12a = instance_position(320, 128, objBridge);
br12b = instance_position(352, 96, objBridge);
br12c = instance_position(352, 128, objBridge);
br13 = instance_position(288, 96, objBridge);
br14 = instance_position(288, 160, objBridge);
br15a = instance_position(320, 320, objBridge);
br15b = instance_position(352, 320, objBridge);
br16a = instance_position(224, 320, objBridge);
br16b = instance_position(256, 320, objBridge);
br17a = instance_position(224, 256, objBridge);
br17b_18c = instance_position(256, 256, objBridge);
br17c = instance_position(288, 256, objBridge);
br17d_19c = instance_position(320, 256, objBridge);
br17e = instance_position(352, 256, objBridge);
br18a = instance_position(256, 192, objBridge);
br18b = instance_position(256, 224, objBridge);
br18d = instance_position(256, 288, objBridge);
br19a = instance_position(320, 192, objBridge);
br19b = instance_position(320, 576, objBridge);
br19d = instance_position(320, 288, objBridge);
br20 = instance_position(544, 64, objBridge);
br21 = instance_position(480, 64, objBridge);

t_a1 = instance_position(288, 32, objTeleportLamp);
t_a2 = instance_position(736, 32, objTeleportLamp);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(c1.on) {
    instance_activate_object(br1a);
    instance_activate_object(br1b);
    instance_activate_object(br1c);
} else {
    instance_deactivate_object(br1a);
    instance_deactivate_object(br1b);
    instance_deactivate_object(br1c);
}

if (c2.on) {
    instance_activate_object(br2);
    instance_activate_object(c12);
    instance_deactivate_object(c14);
    instance_deactivate_object(br14);
} else {
    instance_deactivate_object(br2);
    instance_deactivate_object(c12);
    instance_activate_object(c14);
    instance_activate_object(br14);
}

if (c3.on) {
    instance_activate_object(br3);
} else {
    instance_deactivate_object(br3);
}

if (c4.on) {
    instance_activate_object(br4a);
    instance_activate_object(br4b);
    instance_activate_object(br4c);
} else {
    instance_deactivate_object(br4a);
    instance_deactivate_object(br4b);
    instance_deactivate_object(br4c);
}

if (c5.on) {
    instance_activate_object(br5a);
    instance_activate_object(br5b);
} else {
    instance_deactivate_object(br5a);
    instance_deactivate_object(br5b);
}

if (c6.on) {
    instance_activate_object(br6a);
    instance_activate_object(br6b);
} else {
    instance_deactivate_object(br6a);
    instance_deactivate_object(br6b);
}

if (c7.on) {
    instance_activate_object(br7a);
    instance_activate_object(br7b);
} else {
    instance_deactivate_object(br7a);
    instance_deactivate_object(br7b);
}

if (c8.on) {
    instance_activate_object(br8a);
    instance_activate_object(br8b);
} else {
    instance_deactivate_object(br8a);
    instance_deactivate_object(br8b);
}

if (c9.on) {
    instance_activate_object(br9);
} else {
    instance_deactivate_object(br9);
}

if (c10.on) {
    instance_activate_object(br10);
} else {
    instance_deactivate_object(br10);
}

if (c11.on) {
    instance_activate_object(br11);
} else {
    instance_deactivate_object(br11);
}

if (c12.on) {
    instance_activate_object(br12a);
    instance_activate_object(br12b);
    instance_activate_object(br12c);
} else {
    instance_deactivate_object(br12a);
    instance_deactivate_object(br12b);
    instance_deactivate_object(br12c);
}

if (c13.on) {
    instance_activate_object(br13);
    instance_activate_object(c1);
    instance_deactivate_object(c3);
    instance_deactivate_object(br3);
} else {
    instance_deactivate_object(br13);
    instance_deactivate_object(c1);
    instance_activate_object(c3);
    instance_activate_object(br3);
}

if (c14.on) {
    instance_activate_object(br14);
} else {
    instance_deactivate_object(br14);
}

if (c15.on) {
    instance_activate_object(br15a);
    instance_activate_object(br15b);
    instance_deactivate_object(c16);
} else {
    instance_deactivate_object(br15a);
    instance_deactivate_object(br15b);
    instance_activate_object(c16);
}

if (c16.on) {
    instance_activate_object(br16a);
    instance_activate_object(br16b);
    instance_deactivate_object(c15);
} else {
    instance_deactivate_object(br16a);
    instance_deactivate_object(br16b);
    instance_activate_object(c15);
}

if (c17.on ^^ c18.on ^^ c19.on) {
    instance_activate_object(br17a);
    instance_activate_object(br17c);
    instance_activate_object(br17e);
} else {
    instance_deactivate_object(br17a);
    instance_deactivate_object(br17c);
    instance_deactivate_object(br17e);
}

if (c17.on || c18.on) {
    instance_activate_object(br17b_18c);
} else {
    instance_deactivate_object(br17b_18c);
}

if (c17.on || c19.on) {
    instance_activate_object(br17d_19c);
} else {
    instance_deactivate_object(br17d_19c);
}

if (c18.on) {
    instance_activate_object(br18a);
    instance_activate_object(br18b);
    instance_activate_object(br18d);
    instance_deactivate_object(c19);
} else {
    instance_deactivate_object(br18a);
    instance_deactivate_object(br18b);
    instance_deactivate_object(br18d);
    instance_activate_object(c19);
}

if (c19.on) {
    instance_activate_object(br19a);
    instance_activate_object(br19b);
    instance_activate_object(br19d);
    instance_deactivate_object(c18);
} else {
    instance_deactivate_object(br19a);
    instance_deactivate_object(br19b);
    instance_deactivate_object(br19d);
    instance_activate_object(c18);
}

if (c20.on &amp;&amp; !c21.on) {
    instance_activate_object(br20);
    instance_deactivate_object(c21);
} else {
    instance_deactivate_object(br20);
    instance_activate_object(c21);
}

if (c21.on &amp;&amp; !c20.on) {
    instance_activate_object(br21);
    instance_deactivate_object(c20);
} else {
    instance_deactivate_object(br21);
    instance_activate_object(c20);
}    

if(t_a1.teleport) {
    player.x = t_a2.x;
    player.y = t_a2.y;
    player.direction = 270;
    t_a1.teleport = false;
}
    
if(t_a2.teleport) {
    player.x = t_a1.x;
    player.y = t_a1.y;
    player.direction = 270;
    t_a2.teleport = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
