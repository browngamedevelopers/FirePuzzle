<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
///Player variables
direction += 90; //Orients player up
globalvar moving;

alarm[0] = 1;

blocksize = 32;
playerspeed = 8;
depth = -5000;


lightSize = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Alarm Code
if(position_meeting(x + lengthdir_x(blocksize, direction+90),
                     y + lengthdir_y(blocksize, direction+90), objWalkable)){
    direction += 90;
} else if(position_meeting(x + lengthdir_x(blocksize, direction-90),
                            y + lengthdir_y(blocksize, direction-90), objWalkable)){
    direction -=90;
}

if(position_meeting(x + lengthdir_x(blocksize, direction),
                     y + lengthdir_y(blocksize, direction), objWalkable)){
    speed = playerspeed;
    global.moving = true;
}else {
    speed = 0;
    global.moving = false;
}
alarm[0] = blocksize/playerspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;



var z = choose(-2, 0, 2);
lightSize +=z;
clamp(lightSize, 55, 74);
/*tile = instance_position(x, y, objWalkable); // Walkable platform under the player

if tile != noone {
    tilewidthoff = (tile.sprite_width * 0.5) + 0.01;
    tileheightoff = (tile.sprite_height * 0.5) + 0.01;
    
    leftdir = direction+90;
    rightdir = direction-90;
    
    leftx = x + lengthdir_x(tilewidthoff, leftdir);
    lefty = y + lengthdir_y(tileheightoff, leftdir);
    
    forwardx = x + lengthdir_x(tilewidthoff, direction);
    forwardy = y + lengthdir_y(tileheightoff, direction);
    
    rightx = x + lengthdir_x(tilewidthoff, rightdir);
    righty = y + lengthdir_y(tilewidthoff, rightdir);
    
    var left = position_meeting(leftx, lefty, objWalkable);
    var forward = position_meeting(forwardx, forwardy, objWalkable);
    var right = position_meeting(rightx, righty, objWalkable);
    
    if(forward) {
        speed = 2;
        global.moving = true;
    } else if(left) {
        direction += 90;
    } else if(right) {
        direction -= 90;
    } else {
        speed = 0;
        global.moving = false;
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
